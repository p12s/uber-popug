version: '2'

services:
  auth:
    hostname: auth
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - 8001:8001
    depends_on:
      - kafka

  task:
    hostname: task
    build:
      context: ./task
      dockerfile: Dockerfile
    ports:
      - 8002:8002
    depends_on:
      - kafka

  billing:
    hostname: billing
    build:
      context: ./billing
      dockerfile: Dockerfile
    ports:
      - 8003:8003
    depends_on:
      - kafka

  analitycs:
    hostname: analitycs
    build:
      context: ./analitycs
      dockerfile: Dockerfile
    ports:
      - 8004:8004
    depends_on:
      - kafka

  zoo:
    image: zookeeper:3.4.9
    restart: unless-stopped
    hostname: zoo
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - ./.local-kafka/zoo/data:/data
      - ./.local-kafka/zoo/datalog:/datalog

  kafka:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka
    ports:
      - "9092:9092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zoo:2181
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: kafka
    volumes:
      - ./.local-kafka/kafka/data:/var/lib/kafka/data
    depends_on:
      - zoo
